# Generated by Django 5.0.3 on 2024-06-13 09:39

import ckeditor.fields
import django.db.models.deletion
import phone_field.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AboutUs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=255, verbose_name='Name')),
                ('Name_uz', models.CharField(max_length=255, null=True, verbose_name='Name')),
                ('Name_en', models.CharField(max_length=255, null=True, verbose_name='Name')),
                ('Name_ru', models.CharField(max_length=255, null=True, verbose_name='Name')),
                ('Information', ckeditor.fields.RichTextField(verbose_name='Information')),
                ('Information_uz', ckeditor.fields.RichTextField(null=True, verbose_name='Information')),
                ('Information_en', ckeditor.fields.RichTextField(null=True, verbose_name='Information')),
                ('Information_ru', ckeditor.fields.RichTextField(null=True, verbose_name='Information')),
                ('Date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
            ],
            options={
                'verbose_name': "Kompaniya haqida ma'lumot",
                'verbose_name_plural': "A - Kompaniya haqida ma'lumotlar",
            },
        ),
        migrations.CreateModel(
            name='AppealOfLegal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Subject', models.CharField(choices=[('L', 'Legal'), ('I', 'Individual')], default='L', max_length=2, verbose_name='Appeal type')),
                ('FullName', models.CharField(max_length=255, verbose_name='FullName')),
                ('BirthDate', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
                ('PassportData', models.CharField(max_length=255, verbose_name='Passport information')),
                ('Address', models.CharField(max_length=255, verbose_name='Adress')),
                ('Index', models.CharField(max_length=255, verbose_name='Index')),
                ('Email', models.EmailField(blank=True, max_length=255, null=True, verbose_name='Email')),
                ('Phone', phone_field.models.PhoneField(blank=True, help_text='Contact phone number', max_length=31)),
                ('SubjectType', models.CharField(max_length=255, verbose_name='Subject type')),
                ('QuestionText', models.TextField(verbose_name='Question text')),
                ('Date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
            ],
            options={
                'verbose_name': 'Yuridik shikoyat',
                'verbose_name_plural': 'F - Yuridik shikoyatlar',
            },
        ),
        migrations.CreateModel(
            name='CompanyDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Location', models.CharField(max_length=255, verbose_name='Location')),
                ('Location_uz', models.CharField(max_length=255, null=True, verbose_name='Location')),
                ('Location_en', models.CharField(max_length=255, null=True, verbose_name='Location')),
                ('Location_ru', models.CharField(max_length=255, null=True, verbose_name='Location')),
                ('Phone', phone_field.models.PhoneField(blank=True, help_text='Contact phone number', max_length=31)),
                ('Video_file', models.FileField(blank=True, null=True, upload_to='post_files')),
                ('Email', models.EmailField(blank=True, max_length=255, null=True, verbose_name='Email')),
                ('Work_time', models.CharField(blank=True, max_length=255, null=True, verbose_name='Work time')),
                ('YouTube', models.URLField(blank=True, null=True, verbose_name='Youtube link')),
                ('Facebook', models.URLField(blank=True, null=True, verbose_name='Facebook link')),
                ('Telegram', models.URLField(blank=True, null=True, verbose_name='Telegram link')),
                ('Date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
            ],
            options={
                'verbose_name': "Kompaniya ma'lumoti",
                'verbose_name_plural': "G - Kompaniya ma'lumotlari",
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=255, verbose_name='Name')),
                ('Email', models.EmailField(blank=True, max_length=255, null=True, verbose_name='Email')),
                ('Company', models.CharField(max_length=255, verbose_name='Company')),
                ('Phone', phone_field.models.PhoneField(blank=True, help_text='Contact phone number', max_length=31)),
                ('Message', models.TextField(verbose_name='Message')),
                ('Connected', models.BooleanField(default=False, verbose_name='Has been answered')),
                ('Date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
            ],
            options={
                'verbose_name': 'Aloqa',
                'verbose_name_plural': 'A - Aloqalar',
            },
        ),
        migrations.CreateModel(
            name='Corruption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=255, verbose_name='Name')),
                ('Name_uz', models.CharField(max_length=255, null=True, verbose_name='Name')),
                ('Name_en', models.CharField(max_length=255, null=True, verbose_name='Name')),
                ('Name_ru', models.CharField(max_length=255, null=True, verbose_name='Name')),
                ('Information', ckeditor.fields.RichTextField(verbose_name='Information')),
                ('Information_uz', ckeditor.fields.RichTextField(null=True, verbose_name='Information')),
                ('Information_en', ckeditor.fields.RichTextField(null=True, verbose_name='Information')),
                ('Information_ru', ckeditor.fields.RichTextField(null=True, verbose_name='Information')),
                ('Date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
            ],
            options={
                'verbose_name': 'Korrupsiyaga oid shikoyat',
                'verbose_name_plural': 'F - Korrupsiyaga oid shikoyatlar',
            },
        ),
        migrations.CreateModel(
            name='CustomsClearance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Information', ckeditor.fields.RichTextField(verbose_name='Information')),
                ('Information_uz', ckeditor.fields.RichTextField(null=True, verbose_name='Information')),
                ('Information_en', ckeditor.fields.RichTextField(null=True, verbose_name='Information')),
                ('Information_ru', ckeditor.fields.RichTextField(null=True, verbose_name='Information')),
                ('Date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
            ],
            options={
                'verbose_name': 'Bojxona rasmiylashtiruvi',
                'verbose_name_plural': 'C - Bojxona rasmiylashtiruvi',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=255, verbose_name='Name')),
                ('Name_uz', models.CharField(max_length=255, null=True, verbose_name='Name')),
                ('Name_en', models.CharField(max_length=255, null=True, verbose_name='Name')),
                ('Name_ru', models.CharField(max_length=255, null=True, verbose_name='Name')),
                ('Email', models.EmailField(blank=True, max_length=255, null=True, verbose_name='Email')),
                ('Image', models.ImageField(upload_to='Employee', verbose_name='Image')),
                ('Phone', phone_field.models.PhoneField(blank=True, help_text='Contact phone number', max_length=31)),
                ('ReceptionDate', models.CharField(max_length=255, verbose_name='Reception date')),
                ('Position', models.CharField(max_length=255, verbose_name='Employee position')),
                ('Position_uz', models.CharField(max_length=255, null=True, verbose_name='Employee position')),
                ('Position_en', models.CharField(max_length=255, null=True, verbose_name='Employee position')),
                ('Position_ru', models.CharField(max_length=255, null=True, verbose_name='Employee position')),
                ('Date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
            ],
            options={
                'verbose_name': "Xodim ma'lumotlari",
                'verbose_name_plural': 'A - Xodimlar',
            },
        ),
        migrations.CreateModel(
            name='Exsport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Information', ckeditor.fields.RichTextField(verbose_name='Information')),
                ('Information_uz', ckeditor.fields.RichTextField(null=True, verbose_name='Information')),
                ('Information_en', ckeditor.fields.RichTextField(null=True, verbose_name='Information')),
                ('Information_ru', ckeditor.fields.RichTextField(null=True, verbose_name='Information')),
                ('Date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
            ],
            options={
                'verbose_name': 'Exsport',
                'verbose_name_plural': 'C - Exsport',
            },
        ),
        migrations.CreateModel(
            name='Hamkor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Image', models.ImageField(upload_to='Hamkor', verbose_name='Image')),
                ('Urls', models.URLField(verbose_name='Hamkor url')),
                ('Date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
            ],
            options={
                'verbose_name': 'Hamkor',
                'verbose_name_plural': 'D - Hamkorlar',
                'ordering': ['-Date'],
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Image', models.ImageField(upload_to='MainImages', verbose_name='Image')),
                ('Date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
            ],
            options={
                'verbose_name': 'Rasmlar',
                'verbose_name_plural': 'G - Web sahifaning asosiy rasmi',
            },
        ),
        migrations.CreateModel(
            name='Import',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Information', ckeditor.fields.RichTextField(verbose_name='Information')),
                ('Information_uz', ckeditor.fields.RichTextField(null=True, verbose_name='Information')),
                ('Information_en', ckeditor.fields.RichTextField(null=True, verbose_name='Information')),
                ('Information_ru', ckeditor.fields.RichTextField(null=True, verbose_name='Information')),
                ('Date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
            ],
            options={
                'verbose_name': 'Import',
                'verbose_name_plural': 'C - Import',
            },
        ),
        migrations.CreateModel(
            name='New',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=255, verbose_name='Name')),
                ('Name_uz', models.CharField(max_length=255, null=True, verbose_name='Name')),
                ('Name_en', models.CharField(max_length=255, null=True, verbose_name='Name')),
                ('Name_ru', models.CharField(max_length=255, null=True, verbose_name='Name')),
                ('Image', models.ImageField(blank=True, null=True, upload_to='New', verbose_name='Image')),
                ('Video_file', models.FileField(blank=True, null=True, upload_to='post_files')),
                ('Information', ckeditor.fields.RichTextField(verbose_name='Information')),
                ('Information_uz', ckeditor.fields.RichTextField(null=True, verbose_name='Information')),
                ('Information_en', ckeditor.fields.RichTextField(null=True, verbose_name='Information')),
                ('Information_ru', ckeditor.fields.RichTextField(null=True, verbose_name='Information')),
                ('Date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
            ],
            options={
                'verbose_name': 'Yangilik',
                'verbose_name_plural': 'E - Yangiliklar',
            },
        ),
        migrations.CreateModel(
            name='Outsourcing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Information', ckeditor.fields.RichTextField(verbose_name='Information')),
                ('Information_uz', ckeditor.fields.RichTextField(null=True, verbose_name='Information')),
                ('Information_en', ckeditor.fields.RichTextField(null=True, verbose_name='Information')),
                ('Information_ru', ckeditor.fields.RichTextField(null=True, verbose_name='Information')),
                ('Date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
            ],
            options={
                'verbose_name': 'Autsorsing',
                'verbose_name_plural': 'C - Autsorsing',
            },
        ),
        migrations.CreateModel(
            name='PhotoGallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Image', models.ImageField(blank=True, null=True, upload_to='PhotoGallery/', verbose_name='Image')),
                ('Date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
            ],
            options={
                'verbose_name': 'Fotogalereya',
                'verbose_name_plural': 'E - Fotogalereya',
            },
        ),
        migrations.CreateModel(
            name='PressCenter_1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=255, verbose_name='Name')),
                ('Name_uz', models.CharField(max_length=255, null=True, verbose_name='Name')),
                ('Name_en', models.CharField(max_length=255, null=True, verbose_name='Name')),
                ('Name_ru', models.CharField(max_length=255, null=True, verbose_name='Name')),
                ('Image', models.ImageField(blank=True, null=True, upload_to='PressCenter1', verbose_name='Image')),
                ('Video_file', models.FileField(blank=True, null=True, upload_to='post_files')),
                ('Information', ckeditor.fields.RichTextField(verbose_name='Information')),
                ('Information_uz', ckeditor.fields.RichTextField(null=True, verbose_name='Information')),
                ('Information_en', ckeditor.fields.RichTextField(null=True, verbose_name='Information')),
                ('Information_ru', ckeditor.fields.RichTextField(null=True, verbose_name='Information')),
                ('Date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
            ],
            options={
                'verbose_name': 'Matbuot markazi',
                'verbose_name_plural': 'E - Matbuot markazi',
            },
        ),
        migrations.CreateModel(
            name='PressCenter_2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=255, verbose_name='Name')),
                ('Name_uz', models.CharField(max_length=255, null=True, verbose_name='Name')),
                ('Name_en', models.CharField(max_length=255, null=True, verbose_name='Name')),
                ('Name_ru', models.CharField(max_length=255, null=True, verbose_name='Name')),
                ('Image', models.ImageField(blank=True, null=True, upload_to='PressCenter2', verbose_name='Image')),
                ('Video_file', models.FileField(blank=True, null=True, upload_to='post_files')),
                ('Information', ckeditor.fields.RichTextField(verbose_name='Information')),
                ('Information_uz', ckeditor.fields.RichTextField(null=True, verbose_name='Information')),
                ('Information_en', ckeditor.fields.RichTextField(null=True, verbose_name='Information')),
                ('Information_ru', ckeditor.fields.RichTextField(null=True, verbose_name='Information')),
                ('Date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
            ],
            options={
                'verbose_name': "Ko'rgazma",
                'verbose_name_plural': "E - Ko'rgazmalar",
            },
        ),
        migrations.CreateModel(
            name='Product_category_1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=255, verbose_name='Name')),
                ('Name_uz', models.CharField(max_length=255, null=True, verbose_name='Name')),
                ('Name_en', models.CharField(max_length=255, null=True, verbose_name='Name')),
                ('Name_ru', models.CharField(max_length=255, null=True, verbose_name='Name')),
                ('Type_of_product', models.CharField(choices=[('I', 'Import'), ('E', 'Export')], default='E', max_length=2, verbose_name='Mahsulot turi')),
                ('Date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
            ],
            options={
                'verbose_name': '1-mahsulot kategoriyasi',
                'verbose_name_plural': 'B - 1-mahsulot kategoriyalari(asosiy)',
            },
        ),
        migrations.CreateModel(
            name='Telegram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apiToken', models.CharField(max_length=255, verbose_name='Api Token')),
                ('chatID', models.CharField(max_length=255, verbose_name='Chat Id')),
                ('Date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
            ],
            options={
                'verbose_name': 'Telegram',
                'verbose_name_plural': 'G - Telegram',
            },
        ),
        migrations.CreateModel(
            name='VideoGallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Video_file', models.FileField(blank=True, null=True, upload_to='VideoGallery/')),
                ('Date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
            ],
            options={
                'verbose_name': 'Videogalereya',
                'verbose_name_plural': 'E - Videogalereya',
            },
        ),
        migrations.CreateModel(
            name='Work',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Information', ckeditor.fields.RichTextField(verbose_name='Information')),
                ('Information_uz', ckeditor.fields.RichTextField(null=True, verbose_name='Information')),
                ('Information_en', ckeditor.fields.RichTextField(null=True, verbose_name='Information')),
                ('Information_ru', ckeditor.fields.RichTextField(null=True, verbose_name='Information')),
                ('Position', models.BooleanField(default=False, verbose_name='Active')),
                ('Date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
            ],
            options={
                'verbose_name': 'Ish vakansiyasi',
                'verbose_name_plural': 'A - Ish vakansiyalari',
            },
        ),
        migrations.CreateModel(
            name='Xabar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('User', models.CharField(max_length=255, verbose_name='User')),
                ('Email', models.EmailField(blank=True, max_length=255, null=True, verbose_name='Email')),
                ('Message', models.TextField(verbose_name='Message')),
                ('Date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
                ('Checked', models.BooleanField(default=False, verbose_name='Has been answered')),
            ],
            options={
                'verbose_name': 'Xabar',
                'verbose_name_plural': 'A - Xabarlar',
                'ordering': ['-Checked'],
            },
        ),
        migrations.CreateModel(
            name='Product_category_2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=255, verbose_name='Name')),
                ('Name_uz', models.CharField(max_length=255, null=True, verbose_name='Name')),
                ('Name_en', models.CharField(max_length=255, null=True, verbose_name='Name')),
                ('Name_ru', models.CharField(max_length=255, null=True, verbose_name='Name')),
                ('Image', models.ImageField(upload_to='product', verbose_name='Image')),
                ('Date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
                ('Type_1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='importapp.product_category_1', verbose_name='Category')),
            ],
            options={
                'verbose_name': '2-mahsulot kategoriyasi',
                'verbose_name_plural': 'B - 2-mahsulot kategoriyalari',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=255, verbose_name='Name')),
                ('Name_uz', models.CharField(max_length=255, null=True, verbose_name='Name')),
                ('Name_en', models.CharField(max_length=255, null=True, verbose_name='Name')),
                ('Name_ru', models.CharField(max_length=255, null=True, verbose_name='Name')),
                ('Image', models.ImageField(upload_to='product', verbose_name='Image')),
                ('Information', ckeditor.fields.RichTextField(verbose_name='Information')),
                ('Information_uz', ckeditor.fields.RichTextField(null=True, verbose_name='Information')),
                ('Information_en', ckeditor.fields.RichTextField(null=True, verbose_name='Information')),
                ('Information_ru', ckeditor.fields.RichTextField(null=True, verbose_name='Information')),
                ('Date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
                ('Type_2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='importapp.product_category_2', verbose_name='Category')),
            ],
            options={
                'verbose_name': '3-mahsulot',
                'verbose_name_plural': 'B - 3-mahsulot',
            },
        ),
    ]
